(keywordize m)
(defn keywordize
  [m]
  (into {}
        (for [[k v] m]
             (do
               (println k (type v) (map? v))
               [(keyword k) (if (vector? v)
                                ()
                                (if ()
                                    ()
                                    ()))]))))
(keywordize m)
(defn keywordize
  [m]
  (into {}
        (for [[k v] m]
             (do
               (println k (type v) (map? v))
               [(keyword k) 
                (cond
                  (vector? v) (vec (map keywordize v)
                  (map? v) (keywordize v)
                  :else v))
                #_(if (vector? v)
                                (vec (map keywordize v))
                                (if ()
                                    ()
                                    ()))]))))
(keywordize m)
(defn keywordize
  [m]
  (into {}
        (for [[k v] m]
             (do
               (println k (type v) (map? v))
               [(keyword k) 
                (cond
                  (vector? v) (vec (map keywordize v))
                  (map? v) (keywordize v)
                  :else v)
                #_(if (vector? v)
                                (vec (map keywordize v))
                                (if ()
                                    ()
                                    ()))]))))
(keywordize m)
(def m
  {"id" 1
   "table" "ver"
   "data" [1 12 32]
   "obj" {"a" 1 "b" 2}})
(defn keywordize
  [m]
  (into {}
        (for [[k v] m]
             (do
               (println k (type v) (map? v))
               [(keyword k) 
                (cond
                  (vector? v) (vec (map keywordize v))
                  (map? v) (keywordize v)
                  :else v)
                #_(if (vector? v)
                                (vec (map keywordize v))
                                (if ()
                                    ()
                                    ()))]))))
(keywordize m)
(defn keywordize
  [m]
  (into {}
        (for [[k v] m]
             (do
               (println k (type v) (map? v))
               [(keyword k) 
                (cond
                  (vector? v) (vec (map (fn [vl]
                                            (if (map? vl)
                                                (keywordize vl)
                                                vl))
                                        v))
                  (map? v) (keywordize v)
                  :else v)
                #_(if (vector? v)
                                (vec (map keywordize v))
                                (if ()
                                    ()
                                    ()))]))))
(keywordize m)
(def m
  {"id" 1
   "table" "ver"
   "data" [1 12 32]
   "data2" [{"s" 4 "b" 4} {"l" 1 "lk" 45}]
   "obj" {"a" 1 "b" 2}})
(defn keywordize
  [m]
  (into {}
        (for [[k v] m]
             (do
               (println k (type v) (map? v))
               [(keyword k) 
                (cond
                  (vector? v)
                    (vec
                      (map (fn [vl]
                               (if (map? vl)
                                   (keywordize vl)
                                   vl))
                           v))
                  (map? v) (keywordize v)
                  :else v)]))))
(keywordize m)
(conj [1 2 3 4] 3)
(conj [1 2 34 45] [23 3454])
(cons [1 2 34 45] [23 3454])
(cons (flatten [1 2 34 45]) [23 3454])
(merge [1 2 34 45] [23 3454])
(merge '(1 2 34 45) '(23 3454))
(join '(1 2 34 45) '(23 3454))
(def default-context-menu
  [["Снять выделение" "ctx-menu-action-unselect"]
   ["-" "-"]
   ["Записать" "ctx-menu-action-save"]
   ["Копировать" "ctx-menu-action-copy"]
   ["Удалить" "ctx-menu-action-delete"]])
(defn add-context-menu-items
  [xs]
  (reduce (fn [menu item]
              (conj menu item))
          default-context-menu
          xs))
(add-context-menu-items
  [["КСП" "ctx-menu-action-refs-set"]
   ["Операции" "ctx-menu-action-ops"]])
(add-context-menu-items
  [["-" "-"]
   ["КСП" "ctx-menu-action-refs-set"]
   ["Операции" "ctx-menu-action-ops"]])
(add-context-menu-items
  []#_[["-" "-"]
   ["КСП" "ctx-menu-action-refs-set"]
   ["Операции" "ctx-menu-action-ops"]])
(def fields-settings
  [[:expiration "Срок годности" false]
   [:v_id "ID поверки" true]
   [:ref_id "ID эталона" true]
   [:mi_name "Наименование СИ" false]
   [:mi_type "Тип, модификация СИ" false]
   [:components "Состав" false]
   [:value "Значение" false]
   [:serial_number "Заводской номер" false]
   [:number_1c "Номер 1С" false]
   [:level "Разряд" false]
   [:expiration_date "Срок годности" false]])
(def toolbar-fields-settings
  '(["id поверки" " v_id "]
    ["id эталона" " ref_id "]
    ["номер 1C" " number_1c "]))
(defn make-filter-query
  [where ids]
  (str where
       (string/join (str "or " where) ids)))
(make-filter-query "id = " [1 2 3 4])
(defn make-filter-query
  [where ids]
  (str where
       (string/join (str " or " where) ids)))
(make-filter-query "id = " [1 2 3 4])
(make-filter-query "id = " '(1 2 3 4))
(defn f
  [a b]
  (+ a b))
(f 1 4)
(defn make-filter-query
  [where ids]
  (str where
       (string/join (str " or " where) ids)))
(make-filter-query "id = " '(1 2 3 4))
(require '[clojure.string :as string])
(defn make-filter-query
  [where ids]
  (str where
       (string/join (str " or " where) ids)))
(make-filter-query "id = " '(1 2 3 4))
(not-zero? 0)
(notzero? 0)
(zero? 0)
(zero-not? 0)
(empty? '())
(empty? [])
(not-empty? [])
(notempty? [])
(empty-not? [])
(defn change-field
  [data k]
  (map (fn [{:keys [id v_id ref_id]} rec]
           {:id id :v_id v_id k ref_id})
       data))
(change-field
'({:v_id "4851", :id "11211", :ref_id "382", :type_id "3"}
 {:v_id "4851", :id "11212", :ref_id "387", :type_id "3"}
 {:v_id "4851", :id "11213", :ref_id "286", :type_id "3"})
  :gso_id)
(change-field
  '({:v_id "4851", :id "11211", :ref_id "382", :type_id "3"}
    {:v_id "4851", :id "11212", :ref_id "387", :type_id "3"}
    {:v_id "4851", :id "11213", :ref_id "286", :type_id "3"})
  ':gso_id)
(change-field
  '({:v_id "4851", :id "11211", :ref_id "382", :type_id "3"}
    {:v_id "4851", :id "11212", :ref_id "387", :type_id "3"}
    {:v_id "4851", :id "11213", :ref_id "286", :type_id "3"})
  (keyword "gso_id"))
(change-field
  [{:v_id "4851", :id "11211", :ref_id "382", :type_id "3"}
    {:v_id "4851", :id "11212", :ref_id "387", :type_id "3"}
    {:v_id "4851", :id "11213", :ref_id "286", :type_id "3"}]
  (keyword "gso_id"))
(defn change-field
  [data k]
  (map (fn [{:keys [id v_id ref_id]} rec]
           {:id id :v_id v_id (keyword k) ref_id})
       data))
(change-field
  [{:v_id "4851", :id "11211", :ref_id "382", :type_id "3"}
    {:v_id "4851", :id "11212", :ref_id "387", :type_id "3"}
    {:v_id "4851", :id "11213", :ref_id "286", :type_id "3"}]
  "gso_id")
(defn change-field
  [data]
  (map (fn [{:keys [id v_id ref_id]} rec]
           {:id id :v_id v_id :gso_id #_(keyword k) ref_id})
       data))
(change-field
  [{:v_id "4851", :id "11211", :ref_id "382", :type_id "3"}
    {:v_id "4851", :id "11212", :ref_id "387", :type_id "3"}
    {:v_id "4851", :id "11213", :ref_id "286", :type_id "3"}]
  "gso_id")
(change-field
  [{:v_id "4851", :id "11211", :ref_id "382", :type_id "3"}
    {:v_id "4851", :id "11212", :ref_id "387", :type_id "3"}
    {:v_id "4851", :id "11213", :ref_id "286", :type_id "3"}]
  #_"gso_id")
(defn change-field
  [data]
  (map (fn [{:keys [:id :v_id :ref_id]} rec]
           {:id id :v_id v_id :gso_id #_(keyword k) ref_id})
       data))
(change-field
  [{:v_id "4851", :id "11211", :ref_id "382", :type_id "3"}
    {:v_id "4851", :id "11212", :ref_id "387", :type_id "3"}
    {:v_id "4851", :id "11213", :ref_id "286", :type_id "3"}]
  #_"gso_id")
(defn change-field
  [data k]
  (map (fn [{:keys [id v_id ref_id]}]
           {:id id :v_id v_id k ref_id})
       data))
(change-field
  [{:v_id "4851", :id "11211", :ref_id "382", :type_id "3"}
    {:v_id "4851", :id "11212", :ref_id "387", :type_id "3"}
    {:v_id "4851", :id "11213", :ref_id "286", :type_id "3"}]
  :gso_id)
(change-field
  [{:v_id "4851", :id "11211", :ref_id "382", :type_id "3"}
    {:v_id "4851", :id "11212", :ref_id "387", :type_id "3"}
    {:v_id "4851", :id "11213", :ref_id "286", :type_id "3"}]
  :gso_id)
(prepare-data
  [{:v_id "4851", :id "6988", :ref_id "2846", :type_id "1"}
   {:v_id "4851", :id "6989", :ref_id "2820", :type_id "1"}                                                                              
   {:v_id "4851", :id "11211", :ref_id "382", :type_id "3"}                                                                              
   {:v_id "4851", :id "11212", :ref_id "387", :type_id "3"}                                                                              
   {:v_id "4851", :id "11213", :ref_id "286", :type_id "3"}]
  "1" :ref_id)
(defn prepare-data
  [data type-id field]
  (-> data
      filter-refs type-id
      change-field field))
(defn filter-refs
  [data type-id]
  (filter (fn [rec]
              (= type-id (:type_id rec)))
          data))
(defn prepare-data
  [data type-id field]
  (-> data
      filter-refs type-id
      change-field field))
(prepare-data
  [{:v_id "4851", :id "6988", :ref_id "2846", :type_id "1"}
   {:v_id "4851", :id "6989", :ref_id "2820", :type_id "1"}                                                                              
   {:v_id "4851", :id "11211", :ref_id "382", :type_id "3"}                                                                              
   {:v_id "4851", :id "11212", :ref_id "387", :type_id "3"}                                                                              
   {:v_id "4851", :id "11213", :ref_id "286", :type_id "3"}]
  "1" :ref_id)
(defn prepare-data
  [data type-id field]
  (let [l (filter-refs data type-id)
        k (pprint l)
        i (change-field data field)
        j (pprint l)]
    ())
  #_(-> data
      filter-refs type-id
      change-field field))
(prepare-data
  [{:v_id "4851", :id "6988", :ref_id "2846", :type_id "1"}
   {:v_id "4851", :id "6989", :ref_id "2820", :type_id "1"}                                                                              
   {:v_id "4851", :id "11211", :ref_id "382", :type_id "3"}                                                                              
   {:v_id "4851", :id "11212", :ref_id "387", :type_id "3"}                                                                              
   {:v_id "4851", :id "11213", :ref_id "286", :type_id "3"}]
  "1" :ref_id)
(defn prepare-data
  [data type-id field]
  (let [l (filter-refs data type-id)
        i (change-field data field)
        ]
    ())
  #_(-> data
      filter-refs type-id
      change-field field))
(prepare-data
  [{:v_id "4851", :id "6988", :ref_id "2846", :type_id "1"}
   {:v_id "4851", :id "6989", :ref_id "2820", :type_id "1"}                                                                              
   {:v_id "4851", :id "11211", :ref_id "382", :type_id "3"}                                                                              
   {:v_id "4851", :id "11212", :ref_id "387", :type_id "3"}                                                                              
   {:v_id "4851", :id "11213", :ref_id "286", :type_id "3"}]
  "1" :ref_id)
(defn prepare-data
  [data type-id field]
  (let [l (filter-refs data type-id)
        k (pprint l)
        i (change-field data field)
        j (pprint l)]
    ())
  #_(-> data
      filter-refs type-id
      change-field field))
(defn prepare-data
  [data type-id field]
  (let [l (filter-refs data type-id)
        k (pprint l)
        i (change-field data field)
        j (pprint i)]
    ())
  #_(-> data
      filter-refs type-id
      change-field field))
(prepare-data
  [{:v_id "4851", :id "6988", :ref_id "2846", :type_id "1"}
   {:v_id "4851", :id "6989", :ref_id "2820", :type_id "1"}                                                                              
   {:v_id "4851", :id "11211", :ref_id "382", :type_id "3"}                                                                              
   {:v_id "4851", :id "11212", :ref_id "387", :type_id "3"}                                                                              
   {:v_id "4851", :id "11213", :ref_id "286", :type_id "3"}]
  "1" :ref_id)
(defn prepare-data
  [data type-id field]
  (let [l (filter-refs data type-id)
        k (pprint l)
        i (change-field data field)
        j (pprint i)]
    (i))
  #_(-> data
      filter-refs type-id
      change-field field))
(prepare-data
  [{:v_id "4851", :id "6988", :ref_id "2846", :type_id "1"}
   {:v_id "4851", :id "6989", :ref_id "2820", :type_id "1"}                                                                              
   {:v_id "4851", :id "11211", :ref_id "382", :type_id "3"}                                                                              
   {:v_id "4851", :id "11212", :ref_id "387", :type_id "3"}                                                                              
   {:v_id "4851", :id "11213", :ref_id "286", :type_id "3"}]
  "1" :ref_id)
(defn prepare-data
  [data type-id field]
  (let [l (filter-refs data type-id)
        k (pprint l)
        i (change-field data field)
        ]
    (pprint i))
  #_(-> data
      filter-refs type-id
      change-field field))
(prepare-data
  [{:v_id "4851", :id "6988", :ref_id "2846", :type_id "1"}
   {:v_id "4851", :id "6989", :ref_id "2820", :type_id "1"}                                                                              
   {:v_id "4851", :id "11211", :ref_id "382", :type_id "3"}                                                                              
   {:v_id "4851", :id "11212", :ref_id "387", :type_id "3"}                                                                              
   {:v_id "4851", :id "11213", :ref_id "286", :type_id "3"}]
  "1" :ref_id)
(defn prepare-data
  [data type-id field]
  (let [l (filter-refs data type-id)
        k (pprint l)
        i (change-field l field)
        ]
    (pprint i))
  #_(-> data
      filter-refs type-id
      change-field field))
(prepare-data
  [{:v_id "4851", :id "6988", :ref_id "2846", :type_id "1"}
   {:v_id "4851", :id "6989", :ref_id "2820", :type_id "1"}                                                                              
   {:v_id "4851", :id "11211", :ref_id "382", :type_id "3"}                                                                              
   {:v_id "4851", :id "11212", :ref_id "387", :type_id "3"}                                                                              
   {:v_id "4851", :id "11213", :ref_id "286", :type_id "3"}]
  "1" :ref_id)
(defn prepare-data
  [data type-id field]
  (let [l (filter-refs data type-id)
        k (pprint l)
        i (change-field l field)
        ]
    i)
  #_(-> data
      filter-refs type-id
      change-field field))
(prepare-data
  [{:v_id "4851", :id "6988", :ref_id "2846", :type_id "1"}
   {:v_id "4851", :id "6989", :ref_id "2820", :type_id "1"}                                                                              
   {:v_id "4851", :id "11211", :ref_id "382", :type_id "3"}                                                                              
   {:v_id "4851", :id "11212", :ref_id "387", :type_id "3"}                                                                              
   {:v_id "4851", :id "11213", :ref_id "286", :type_id "3"}]
  "1" :ref_id)
(defn prepare-data
  [data type-id field]
  #_(let [l (filter-refs data type-id)
        k (pprint l)
        i (change-field l field)
        ]
    i)
  (-> data
      filter-refs type-id
      change-field field))
(prepare-data
  [{:v_id "4851", :id "6988", :ref_id "2846", :type_id "1"}
   {:v_id "4851", :id "6989", :ref_id "2820", :type_id "1"}                                                                              
   {:v_id "4851", :id "11211", :ref_id "382", :type_id "3"}                                                                              
   {:v_id "4851", :id "11212", :ref_id "387", :type_id "3"}                                                                              
   {:v_id "4851", :id "11213", :ref_id "286", :type_id "3"}]
  "1" :ref_id)
(defn prepare-data
  [data type-id field]
  (let [f-data (filter-refs data type-id)
        res (change-field l field)]
    res)
  #_(-> data
      filter-refs type-id
      change-field field))
(defn prepare-data
  [data type-id field]
  (let [f-data (filter-refs data type-id)
        res (change-field f-data field)]
    res)
  #_(-> data
      filter-refs type-id
      change-field field))
(prepare-data
  [{:v_id "4851", :id "6988", :ref_id "2846", :type_id "1"}
   {:v_id "4851", :id "6989", :ref_id "2820", :type_id "1"}                                                                              
   {:v_id "4851", :id "11211", :ref_id "382", :type_id "3"}                                                                              
   {:v_id "4851", :id "11212", :ref_id "387", :type_id "3"}                                                                              
   {:v_id "4851", :id "11213", :ref_id "286", :type_id "3"}]
  "1" :ref_id)
(defn prepare-data
  [data type-id field]
  #_(let [f-data (filter-refs data type-id)
        res (change-field f-data field)]
    res)
  (-> data
      (filter-refs type-id)
      (change-field field)))
(prepare-data
  [{:v_id "4851", :id "6988", :ref_id "2846", :type_id "1"}
   {:v_id "4851", :id "6989", :ref_id "2820", :type_id "1"}                                                                              
   {:v_id "4851", :id "11211", :ref_id "382", :type_id "3"}                                                                              
   {:v_id "4851", :id "11212", :ref_id "387", :type_id "3"}                                                                              
   {:v_id "4851", :id "11213", :ref_id "286", :type_id "3"}]
  "1" :ref_id)
(defn prepare-data
  [data type-id field]
  (-> data
      (filter-refs type-id)
      (change-field field)))
(prepare-data
  [{:v_id "4851", :id "6988", :ref_id "2846", :type_id "1"}
   {:v_id "4851", :id "6989", :ref_id "2820", :type_id "1"}                                                                              
   {:v_id "4851", :id "11211", :ref_id "382", :type_id "3"}                                                                              
   {:v_id "4851", :id "11212", :ref_id "387", :type_id "3"}                                                                              
   {:v_id "4851", :id "11213", :ref_id "286", :type_id "3"}]
  "1" :ref_id)
(defn f [xs] (map #(/ % 4.4 0.01)) xs)
(f [1.116 1.806])
(defn f [xs] (map #(/ % 4.4 0.01) xs)
)
(f [1.116 1.806])
(f [1.116 2.15])
